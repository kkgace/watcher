
//定义一个data数据库来源
var data = stream.from()// note you should normally use the from method first, as you can create weird behavior if you use more than one stream later. See #203
    .measurement('reading')
    .where(lambda: "SensorSerialCode" == 'AQS1XOLD10000000' OR "SensorSerialCode" == 'AQS1XNEW10000000')
    // Group the stream by sensor, now each alert node will track state by group aka sensor.
    .groupBy('SensorSerialCode')

//每个阈值设置一个报警
data
    .alert()
        .id('Sensor {{ index .Tags "SensorSerialCode" }}')
        .message('{{ .ID }} {{ .Level }}: Temperature ({{ index .Fields "Temperature" }}) went above threshold (10) ')
        .warn(lambda: "Temperature" > 10)
        .log('/tmp/alerts.log')

//第二个报警
data
    .alert()
        .id('Sensor {{ index .Tags "SensorSerialCode" }}')
        .message('{{ .ID }} {{ .Level }}: Voc ({{ index .Fields "Voc" }}) went below threshold (500) ')
        .warn(lambda: "Voc" < 500)
        .log('/tmp/alerts.log')



//type和 dbrp是设置的时候是必须的
-type stream -dbrp kapacitor_example.default
------------------------------------------------------------------------------------------------
//以var 开头定义一个stream data变量
var yaoguang_push = stream
    |from()
        .database('yaoguang')
        .retentionPolicy('default')
        .measurement('yaoguang_push')
        .groupBy('host')
        //.where(lambda: "host" == '''localhost:8080''')

yaoguang_push
    |alert()
        .id('yaoguang_push {{ index .Tags "host" }} ')
        .message('{{ .ID }} is {{ .Level }} dao_get_company_by_id_count:{{ index .Fields "dao_get_company_by_id_count" }}')
        //Email body as HTML
        //.details('''
    //<h1>{{ .ID }}</h1>
    //<b>{{ .Message }}</b>
    //Value: {{ index .Fields "usage_idle" }}
    //''')
        .crit(lambda: "dao_get_company_by_id_count" < 10)
        // Whenever we get an alert write it to a file.
        .log('/tmp/alerts.log')
        .email('kefei@baixing.com')
        .talk()

yaoguang_push
    |alert()
        .id('yaoguang_push {{ index .Tags "host" }}')
        .message('{{ .ID }} is {{ .Level }} dao_get_company_by_id_time:{{ index .Fields "dao_get_company_by_id_time" }}')
        .crit(lambda: "dao_get_company_by_id_time" > 100)
        .log('/tmp/alerts.log')
        .email('kefei@baixing.com')
        .talk()


------------------------------------------------------------------------------------------------------------------------
kapacitor -url http://localhost:9093 disable cpu_alert
kapacitor -url http://localhost:9093 show cpu_alert
kapacitor -url http://localhost:9093 enable cpu_alert
kapacitor -url http://localhost:9093 define cpu_alert -tick cpu_alert.tick

kapacitor reload disk_alert should re-execute


kapacitor -url http://localhost:9093 define yaoguang_push -tick yaoguang_push.tick
kapacitor -url http://localhost:9093 show yaoguang_push
kapacitor -url http://localhost:9093 reload yaoguang_push
kapacitor -url http://localhost:9093 define yaoguang_push -tick yaoguang_push.tick -type stream -dbrp yaoguang.default


